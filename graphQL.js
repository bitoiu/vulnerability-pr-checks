module.exports = {
  getVulnerabilityAlertsQuery: `query($owner:String!, $repository:String!) {
    repository(owner: $owner , name: $repository) {
      vulnerabilityAlerts(first:10) {
      edges {
          node {
            id
            packageName
            affectedRange
            dismissedAt
            dismissReason
            dismisser {
              login
            }
            securityVulnerability {
              severity
              updatedAt            
            }
          }
        }
      }
    }
  }`,

  createRunCheckMutation: `mutation(
      $headSha:GitObjectID!, 
      $repositoryNodeId:ID!, 
      $status:RequestableCheckStatusState!,
      $conclusion:CheckConclusionState, 
      $completedAt:DateTime) {
        createCheckRun(input: {
          headSha:$headSha,
          name:"Check outstanding vulnerabilities",
          repositoryId: $repositoryNodeId,
          status:$status,
          conclusion:$conclusion,
          completedAt:$completedAt
        }) 
      {
      checkRun {
          id
      }
    } 
  }`,

  updateRunCheckMutation: `mutation(
      $checkRunId:ID!, 
      $repositoryNodeId:ID!, 
      $status:RequestableCheckStatusState!,
      $conclusion:CheckConclusionState, 
      $completedAt:DateTime) {
        updateCheckRun(input: {
          repositoryId: $repositoryNodeId,
          checkRunId:$checkRunId,
          status:$status,
          conclusion:$conclusion,
          completedAt:$completedAt
        })       
        {
        checkRun {
          id
        }
    } 
  }`,

  updateCheckRunMutationWithOutput: `mutation(
      $checkRunId:ID!, 
      $repositoryNodeId:ID!, 
      $status:RequestableCheckStatusState!,
      $conclusion:CheckConclusionState, 
      $outputTitle:String!,
      $outputText:String,
      $outputSummary:String!,
      $completedAt:DateTime) {
        updateCheckRun(input: {
          repositoryId: $repositoryNodeId,
          checkRunId:$checkRunId,
          status:$status,
          conclusion:$conclusion,
          completedAt:$completedAt,         
          output: {
            title: $outputTitle,
            text: $outputText,
            summary: $outputSummary
          }
        })       
        {
        checkRun {
          id
        }
    } 
  }`
}
